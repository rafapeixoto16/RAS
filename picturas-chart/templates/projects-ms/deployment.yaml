apiVersion: apps/v1
kind: Deployment
metadata:
  name: projects-ms
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      name: projects-ms
  template:
    metadata:
      labels:
        name: projects-ms
    spec:
      containers:
        - name: projects-ms
          image: projects-ms:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 3000
            - containerPort: 9121
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9121
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9121
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: RABBITMQ_PORT
              value: {{ .Values.rabbitmq.service.ports.amqp | quote }}
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-auth-secret
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-auth-secret
                  key: password
            - name: FILTER_OUTPUT_EXCHANGE
              value: {{ .Values.filter_output_exchange }}
            - name: FILTER_OUTPUT_ROUTING_KEY
              value: {{ .Values.filter_output_routing_key }}
            - name: NOTIFICATION_QUEUE
              value: {{ .Values.notification_queue }}
            - name: PROJ_DB_HOST
              value: 'projects-ms-db-headless'
            - name: PROJ_DB_PORT
              value: {{ index .Values "projects-ms-db" "containerPorts" "mongodb" | quote }}
            - name: PROJ_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: projects-ms-db-secret
                  key: username
            - name: PROJ_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: projects-ms-db-secret
                  key: password
            - name: S3_ENDPOINT
              value: {{ .Values.s3_endpoint }}
            - name: S3_PORT
              value: {{ .Values.s3_port | quote }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: username
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-secret
                  key: password
            - name: S3_PICTURE_BUCKET
              value: {{ .Values.s3_picture_bucket }}
            - name: S3_TEMP_BUCKET
              value: {{ .Values.s3_temp_bucket }}
            - name: FILTER_SHARED_DIR
              value: {{ .Values.filter_shared_dir }}
            - name: FILTER_REDIS_HOST
              value: "filter-redis-master"
            - name: FILTER_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: filter-redis-auth-secret
                  key: password
            - name: FRONTEND_URL
              value: {{ .Values.frontend_url }}
            - name: SUBSCRIPTIONS_MS
              value: subscriptions-ms
            - name: SUBSCRIPTIONS_MS_PORT
              value: '3000'
          volumeMounts:
            - mountPath: {{ .Values.filter_shared_dir }}
              name: nfs-volume
      volumes:
        - name: nfs-volume # Simulated with hostPath (single node)
          hostPath:
            path: /tmp/picturas
